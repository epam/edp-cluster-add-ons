{{ if .Values.cronjob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: recreate-nodepool-morning
spec:
  schedule: "{{ .Values.cronjob.startTime}}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: recreate-nodepool
              image: bitnami/kubectl:1.25.4
              command:
                - /bin/sh
                - -c
                - |
                  kubectl apply -f /config/nodepool.yaml
              volumeMounts:
                - name: config-volume
                  mountPath: /config
          volumes:
            - name: config-volume
              configMap:
                name: nodepool-config
          restartPolicy: OnFailure
          {{ if.Values.karpenter.tolerations }}
          tolerations:
          {{ .Values.karpenter.tolerations | toYaml | nindent 10 }}
          {{ end }}
          {{ if.Values.karpenter.nodeSelector }}
          nodeSelector:
          {{ .Values.karpenter.nodeSelector | toYaml | nindent 12 }}
          {{ end }}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: recreate-nodepool-evening
spec:
  schedule: "{{ .Values.cronjob.endTime }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: recreate-nodepool
              image: bitnami/kubectl:1.25.4
              command:
                - /bin/sh
                - -c
                - |
                  kubectl delete -f /config/nodepool.yaml || true
              volumeMounts:
                - name: config-volume
                  mountPath: /config
          volumes:
            - name: config-volume
              configMap:
                name: nodepool-config
          restartPolicy: OnFailure
          {{ if.Values.karpenter.tolerations }}
          tolerations:
          {{ .Values.karpenter.tolerations | toYaml | nindent 10 }}
          {{ end }}
          {{ if.Values.karpenter.nodeSelector }}
          nodeSelector:
          {{ .Values.karpenter.nodeSelector | toYaml | nindent 12 }}
          {{ end }}
{{ end }}