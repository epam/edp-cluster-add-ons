edp-install:
## edp-install configuration
## Full list of parameters are available in https://github.com/epam/edp-install/blob/release/3.8/deploy-templates/values.yaml and in each of subchart
  global:
    # -- a cluster DNS wildcard name
    dnsWildCard: example.com
    # API Gateway URL configuration for Widget Functionality
    # This configuration specifies the URL of the API Gateway that is used by various widgets within the platform.
    # The 'api_gateway_url' should be set to the ingress URL of the KrakenD API Gateway
    # By default, this value is left empty, and widgets are disabled
    # -- API Gateway URL configuration for Widget Functionality
    apiGatewayUrl: ""
    # -- platform type that can be "kubernetes" or "openshift"
    platform: kubernetes
    # -- Can be gerrit, github or gitlab. By default: github
    gitProviders:
      # - github
      # - gitlab
      # - gerrit
    # Below is an example of endpoint values for each registry type:
    # type:      | url
    # =============================
    # ecr        | <aws_account_id>.dkr.ecr.<aws_region>.amazonaws.com
    # harbor     | <registry.example.com>
    # dockerhub  | 'docker.io'
    # openshift  | <image-registry.openshift-image-registry.svc:5000>

    # For example to integrate platform with dockerhub and publish image under 'my_user' account:
    # dockerRegistry:
    #   type: "dockerhub"
    #   url: "docker.io"
    #   space: "my_user"
    # =============================
    # dockerRegistry:
    #   type: "ecr"
    #   url: "<aws_account_id>.dkr.ecr.<aws_region>.amazonaws.com"
    #   space: "edp"
    #   awsRegion: "eu-central-1"

  # Configure External Secrets Operator to provision secrets for Platform and/or EDP
  # https://external-secrets.io/latest/provider-aws-secrets-manager/
  externalSecrets:
    # -- Configure External Secrets for EDP platform. Deploy SecretStore. Default: false
    enabled: false
    secretProvider:
      aws:
        role: arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess
    manageEDPInstallSecrets: true
    # -- Value name in AWS ParameterStore or AWS SecretsManager. Used when manageEDPInstallSecrets is true
    manageEDPInstallSecretsName: /edp/deploy-secrets
    manageCodemieSecretsName: /edp/codemie-secrets
    manageGitProviderSecretsName: /edp/git-provider-secrets

  # -- Define platform Quick Links, more details: https://github.com/epam/edp-codebase-operator/
  # @default -- ``
  quickLinks:
  #   argocd: ""
  #   defectdojo: ""
  #   dependency_track: ""
  #   docker_registry: ""
  #   grafana: ""
  #   kibana: ""
  #   nexus: ""
  #   sonar: ""
  #   codemie: ""

  # -- Define extra Quick Links, more details: https://github.com/epam/edp-codebase-operator/
  extraQuickLinks: {}
    # - prometheus:
    #     url: https://ingress-prometheus.example.com
    #     visible: true
    #     icon: icon_in_base64
    # - another_tool:
    #     url: https://ingress-anothertool.example.com
    #     visible: true
    #     icon: icon_in_base64

  edp-headlamp:
    config:
      # -- Ensure that the specified client is associated with cluster OIDC integration.
      # -- For detailed instructions, refer to: https://docs.kuberocketci.io/docs/operator-guide/auth/configure-keycloak-oidc-eks, https://docs.kuberocketci.io/docs/operator-guide/auth/ui-portal-oidc
      oidc:
        # Enable OIDC integration. Default: false
        enabled: true
        # -- OIDC Issuer URL for authentication.
        # -- This URL identifies the OpenID Connect provider endpoint. Examples:
        # -- Keycloak: https://keycloak.example.com/auth/realms/<realm-name>
        # -- Azure Entra: https://sts.windows.net/<tenant-id>/
        issuerUrl: ""
        # -- OIDC client ID
        clientID: "shared"
        # -- OIDC client secret name
        clientSecretName: "keycloak-client-headlamp-secret"
        # -- OIDC client secret key
        clientSecretKey: "clientSecret"

  edp-tekton:
    tekton-cache:
      enabled: true
      # Tekton cache endpoint for pipeline-library helm chart. See charts/pipelines-library/templates/resources/cm-tekton-cache.yaml
      # url: http://tekton-cache:8080
    dashboard:
      # -- Deploy Tekton Dashboard as a part of pipeline library when true. Default: true
      # -- WARNING: Default deployment of the dashboard does not involve any proxy and may be accessible to the public.
      # -- To enable proxy protect use openshift_proxy or sso.enabled sections.
      # -- More details:
      # -- https://docs.kuberocketci.io/docs/operator-guide/auth/oauth2-proxy
      enabled: true
      # -- Define mode for Tekton Dashboard. Enable/disaable capability to create/modify/remove Tekton objects via Tekton Dashboard. Default: false.
      readOnly: false
      ingress:
        # -- Deploy KubeRocketCI Dashboard ingress as a part of pipeline library when true. Default: true
        enabled: true
        # -- Annotations for Ingress resource
        annotations: {}
          # -- Uncomment it to enable tekton-dashboard OIDC on EKS cluster
          # nginx.ingress.kubernetes.io/auth-signin='https://<oauth-ingress-host>/oauth2/start?rd=https://$host$request_uri'
          # nginx.ingress.kubernetes.io/auth-url='http://oauth2-proxy.<edp-project>.svc.cluster.local:8080/oauth2/auth'

    # GitServers configuration section
    # GitServer creation depends on the gitProviders configuration, if gitProvider is not enabled,
    # the GitServer will not be created.
    gitServers: {}
    #   my-github:
    #     gitProvider: github
    #     host: github.com
    #     webhook:
    #       skipWebhookSSLVerification: false
    #     eventListener:
    #       # -- Enable EventListener
    #       enabled: true
    #       # -- EventListener resources
    #       resources:
    #         requests:
    #           memory: "64Mi"
    #           cpu: "50m"
    #         limits:
    #           memory: "128Mi"
    #           cpu: "500m"
    #       # -- Node labels for EventListener pod assignment
    #       nodeSelector: {}
    #       # -- Tolerations for EventListener pod assignment
    #       tolerations: []
    #       # -- Affinity for EventListener pod assignment
    #       affinity: {}

    #       ingress:
    #         # -- Enable ingress controller resource
    #         enabled: true
    #         # -- Ingress annotations
    #         annotations: {}
    #         # -- Ingress TLS configuration
    #         tls: []

    #   my-gitlab:
    #     gitProvider: gitlab
    #     host: gitlab.com
    #     webhook:
    #       # codebase operator will use this URL to create webhooks in GitLab, if it is not defined
    #       # the operator will use the Ingress value
    #       url: "http://gitlab.example.com"
    #       skipWebhookSSLVerification: false
    #     eventListener:
    #       # -- Enable EventListener
    #       enabled: true
    #       # -- EventListener resources
    #       resources:
    #         requests:
    #           memory: "64Mi"
    #           cpu: "50m"
    #         limits:
    #           memory: "128Mi"
    #           cpu: "500m"
    #       # -- Node labels for EventListener pod assignment
    #       nodeSelector: {}
    #       # -- Tolerations for EventListener pod assignment
    #       tolerations: []
    #       # -- Affinity for EventListener pod assignment
    #       affinity: {}

    #       ingress:
    #         # -- Enable ingress controller resource
    #         enabled: true
    #         # -- Ingress annotations
    #         annotations: {}
    #         # -- Ingress TLS configuration
    #         tls: []

    #   my-gerrit:
    #     gitProvider: gerrit
    #     host: gerrit.example.com
    #     gitUser: ci-user
    #     httpsPort: 443
    #     nameSshKeySecret: gerrit-ciuser-sshkey
    #     sshPort: 30022
    #     webhook:
    #       skipWebhookSSLVerification: false
    #     eventListener:
    #       # -- Enable EventListener
    #       enabled: true
    #       # -- EventListener resources
    #       resources:
    #         requests:
    #           memory: "64Mi"
    #           cpu: "50m"
    #         limits:
    #           memory: "128Mi"
    #           cpu: "500m"
    #       # -- Node labels for EventListener pod assignment
    #       nodeSelector: {}
    #       # -- Tolerations for EventListener pod assignment
    #       tolerations: []
    #       # -- Affinity for EventListener pod assignment
    #       affinity: {}

    #       ingress:
    #         # -- Enable ingress controller resource
    #         enabled: true
    #         # -- Ingress annotations
    #         annotations: {}
    #         # -- Ingress TLS configuration
    #         tls: []
    #   my-bitbucket:
    #     gitProvider: bitbucket
    #     host: bitbucket.org
    #     webhook:
    #       skipWebhookSSLVerification: false
    #     eventListener:
    #       # -- Enable EventListener
    #       enabled: true
    #       # -- EventListener resources
    #       resources:
    #         requests:
    #           memory: "64Mi"
    #           cpu: "50m"
    #         limits:
    #           memory: "128Mi"
    #           cpu: "500m"
    #       # -- Node labels for EventListener pod assignment
    #       nodeSelector: {}
    #       # -- Tolerations for EventListener pod assignment
    #       tolerations: []
    #       # -- Affinity for EventListener pod assignment
    #       affinity: {}

    #       ingress:
    #         # -- Enable ingress controller resource
    #         enabled: true
    #         # -- Ingress annotations
    #         annotations: {}
    #         # -- Ingress TLS configuration
    #         tls: []
  cd-pipeline-operator:
    # -- Defines the type of the tenant engine that can be "none", "kiosk" or "capsule";
    # for Stages with external cluster tenancyEngine will be ignored. Default: none
    tenancyEngine: "none"
    # -- Flag indicating whether the operator should manage secrets for stages.
    # This parameter controls the provisioning of the 'regcred' secret within deployed environments, facilitating access to private container registries.
    # Set the parameter to "none" under the following conditions:
    #   - If 'global.dockerRegistry.type=ecr' and IRSA is enabled, or
    #   - If 'global.dockerRegistry.type=openshift'.
    # For private registries, choose the most appropriate method to provide credentials to deployed environments. Refer to the guide for managing container registries (https://docs.kuberocketci.io/docs/user-guide/manage-container-registries).
    # Possible values: own/eso/none.
    #   - own: Copies the secret once from the parent namespace, without subsequent reconciliation. If updated in the parent namespace, manual updating in all created namespaces is required.
    #   - eso: The secret will be managed by the External Secrets Operator (requires installation and configuration in the cluster: https://docs.kuberocketci.io/docs/operator-guide/secrets-management/install-external-secrets-operator).
    #   - none: Disables secrets management logic.
    secretManager: own
