reportportal:
  serviceindex:
    resources:
      requests:
        cpu: 50m
  uat:
    superadminInitPasswd:
      secretName: "reportportal-superadmin-password"
      passwordKeyName: "superadmin-password"
    resources:
      requests:
        cpu: 50m
  serviceui:
    resources:
      requests:
        cpu: 50m
  serviceapi:
    resources:
      requests:
        cpu: 50m
  serviceanalyzer:
    resources:
      requests:
        cpu: 50m
  serviceanalyzertrain:
    resources:
      requests:
        cpu: 50m

  rabbitmq:
    install: false

  opensearch:
    install: false

  minio:
    install: false

  msgbroker:
    user: user
    apiuser: user
    secretName: "reportportal-rabbitmq-creds"
    endpoint: report-portal-rabbitmq.report-portal.svc.cluster.local

  database:
    secretName: "reportportal-postgresql-creds"
    endpoint: reportportal-primary.report-portal.svc.cluster.local

  searchengine:
    secretName:
    endpoint: opensearch-cluster-master.report-portal.svc.cluster.local

  storage:
    type: minio
    secretName: "reportportal-minio-creds"
    accesskeyName: "root-user"
    secretkeyName: "root-password"
    endpoint: report-portal-minio.report-portal.svc.cluster.local
    endpointshort: report-portal-minio.report-portal.svc.cluster.local

  ingress:
    # IF YOU HAVE SOME DOMAIN NAME SET INGRESS.USEDOMAINNAME to true and redefine url
    usedomainname: true
    hosts:
      - report-portal.example.com

minio:
  auth:
    existingSecret: reportportal-minio-creds
  persistence:
    size: 1Gi

rabbitmq:
  auth:
    existingPasswordSecret: reportportal-rabbitmq-creds
    existingErlangSecret: reportportal-rabbitmq-creds
  persistence:
    size: 1Gi
  extraEnvVars:
    - name: RABBITMQ_FEATURE_FLAGS
      value: stream_single_active_consumer
  extraPlugins: >
    rabbitmq_auth_backend_ldap
    rabbitmq_consistent_hash_exchange
    rabbitmq_shovel
    rabbitmq_shovel_management
  extraConfiguration: |-
    max_message_size = 134217728

opensearch:
  singleNode: true
  startupProbe:
    initialDelaySeconds: 45
  extraEnvs:
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
    - name: DISABLE_SECURITY_PLUGIN
      value: "true"
  resources:
    requests:
      cpu: "100m"
      memory: "2Gi"

  persistence:
    size: 3Gi

# Enable SAML authentication via Keycloak.
# Note: Enabling SAML authentication also requires the keycloak-operator to process Keycloak resources.
# For detailed instructions on setting up SAML authentication for report-portal, refer to:
# https://docs.kuberocketci.io/docs/operator-guide/project-management-and-reporting/reportportal-keycloak
saml:
  enabled: false

# This section enables configuration for using External Secrets Operator (ESO) as the secret manager.
# Prerequisite: Ensure that ESO is installed in the cluster.
# Refer to the EDP cluster add-on for ESO installation and setup:
# https://github.com/epam/edp-cluster-add-ons/tree/main/clusters/core/addons/external-secrets
#
# Ensure that you have created the necessary roles for ESO integration.
# Follow the detailed instructions here:
# https://docs.kuberocketci.io/docs/operator-guide/secrets-management/external-secrets-operator-integration#aws-parameter-store-scenario-in-kuberocketci
eso:
  # -- Install components of the ESO.
  enabled: true
  # -- Defines provider type. One of `aws`, `generic`, or `vault`.
  provider: "aws"
  # -- Defines the path to the secret in the provider. If provider is `vault`, this is the path must be prefixed with `secret/`.
  secretPath: "/infra/core/addons/reportportal"
  # -- Vault configuration (if provider is `vault`).
  vault:
    # -- Vault server URL.
    server: "http://vault.vault:8200"
    # -- Mount path for the Kubernetes authentication method.
    mountPath: "core"
    # -- Vault role for the Kubernetes authentication method.
    role: report-portal
  # -- AWS configuration (if provider is `aws`).
  aws:
    # -- AWS region.
    region: "eu-central-1"
    # -- AWS role ARN for the ExternalSecretOperator to assume.
    roleArn: "arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess"
  generic:
    secretStore:
      # -- Defines SecretStore provider configuration.
      providerConfig: {}
      #  gcpsm:
      #    projectID: "alphabet-123"
