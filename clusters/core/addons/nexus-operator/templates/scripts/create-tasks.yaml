apiVersion: edp.epam.com/v1alpha1
kind: NexusScript
metadata:
  name: create-task
spec:
  execute: true
  content: |
    import groovy.json.JsonSlurper
    import org.sonatype.nexus.scheduling.TaskConfiguration
    import org.sonatype.nexus.scheduling.TaskInfo
    import org.sonatype.nexus.scheduling.TaskScheduler
    import org.sonatype.nexus.scheduling.schedule.Schedule
    parsed_args = new JsonSlurper().parseText(args)
    Schedule schedule
    parsed_args.each {
      TaskScheduler taskScheduler = container.lookup(TaskScheduler.class.getName())
      TaskInfo existingTask = taskScheduler.listsTasks().find { TaskInfo taskInfo ->
          taskInfo.name == it.name
      }
      if (existingTask && !existingTask.remove()) {
          throw new RuntimeException("Could not remove currently running task : " + it.name)
      }
      TaskConfiguration taskConfiguration = taskScheduler.createTaskConfigurationInstance(it.typeId)
      taskConfiguration.setName(it.name)
      it.taskProperties.each { key, value -> taskConfiguration.setString(key, value) }
      if (it.cron)
        schedule = taskScheduler.scheduleFactory.cron(new Date(), it.cron)
      if (it.manual)
        schedule = taskScheduler.scheduleFactory.manual()
      taskScheduler.scheduleTask(taskConfiguration, schedule)
    }
  name: create-task
  nexusRef:
    kind: Nexus
    name: nexus
  payload: >-
    [
      {
        "name": "compact-blobstore-container",
        "cron": "0 20 9 * * ?",
        "typeId": "blobstore.compact",
        "taskProperties": {
          "blobstoreName": "edp-container"
        }
      },
      {
        "name": "compact-blobstore-default",
        "cron": "0 0 9 * * ?",
        "typeId": "blobstore.compact",
        "taskProperties": {
          "blobstoreName": "default"
        }
      },
      {
        "name": "compact-blobstore-dotnet",
        "cron": "0 20 9 * * ?",
        "typeId": "blobstore.compact",
        "taskProperties": {
          "blobstoreName": "edp-dotnet"
        }
      },
      {
        "name": "compact-blobstore-maven",
        "cron": "0 20 9 * * ?",
        "typeId": "blobstore.compact",
        "taskProperties": {
          "blobstoreName": "edp-maven"
        }
      },
      {
        "name": "compact-blobstore-npm",
        "cron": "0 20 9 * * ?",
        "typeId": "blobstore.compact",
        "taskProperties": {
          "blobstoreName": "edp-npm"
        }
      },
      {
        "name": "purge-orphaned-api-keys",
        "cron": "0 0 10 * * ?",
        "typeId": "security.purge-api-keys"
      },
      {
        "name": "purge-unused-components-and-assets",
        "cron": "0 40 9 * * ?",
        "typeId": "repository.purge-unused",
        "taskProperties": {
          "repositoryName": "*",
          "lastUsed": "14"
        }
      },
      {
        "name": "purge-unused-maven-snapshot-versions",
        "cron": "0 20 10 * * ?",
        "typeId": "repository.maven.purge-unused-snapshots",
        "taskProperties": {
          "repositoryName": "*",
          "lastUsed": "14"
        }
      },
      {
        "name": "rebuild-maven-repository-metadata",
        "cron": "0 20 11 * * ?",
        "typeId": "repository.maven.rebuild-metadata",
        "taskProperties": {
          "repositoryName": "*"
        }
      },
      {
        "name": "rebuild-repository-index",
        "cron": "0 40 11 * * ?",
        "typeId": "repository.rebuild-index",
        "taskProperties": {
          "repositoryName": "*"
        }
      },
      {
        "name": "remove-maven-indexes",
        "cron": "0 40 10 * * ?",
        "typeId": "repository.maven.unpublish-dotindex",
        "taskProperties": {
          "repositoryName": "*"
        }
      },
      {
        "name": "remove-snapshots-from-maven-repository",
        "cron": "0 0 11 * * ?",
        "typeId": "repository.maven.remove-snapshots",
        "taskProperties": {
          "repositoryName": "*",
          "minimumRetained": "1",
          "snapshotRetentionDays": "30",
          "gracePeriodInDays": "10"
        }
      }
    ]
