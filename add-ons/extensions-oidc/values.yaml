# URL to the Keycloak instance that the operator will manage.
keycloakUrl: "https://example.com"
# Recommended to utilize this realm primarily for enabling unique integrations and
# inheriting these capabilities into other realms.
broker:
  # Create the broker realm with corresponding resources.
  create: true
  # If broker create parameter set to false operator create only a client for connection as Identity Provider,
  # in this case be sure you define correct Realm name.
  name: "broker"

# If you already have pre-configured realm and don't need to create a new one, set the broker create
# parameter to false and uncomment existingBroker parameter and provide the name of the existing realm:

# existingBroker: ""

# Realm creating for connecting and managing shared services clients, such as Nexus, Sonar, DefectDojo, etc.
sharedService: "shared"

# -- This block enable the creation of Keycloak operator resources for the EKS OIDC configuration, such as client, client scope, and realm groups.
kubernetes:
  enabled: false

# Configure components of the External Secrets Operator (ESO).
eso:
  # -- Install components of the ESO.
  enabled: true
  # -- Defines provider type. One of `aws` or `generic`.
  type: "aws"
  # -- Defines Secret Store name.
  secretStoreName: "aws-parameterstore"
  # -- Value name in AWS ParameterStore, AWS SecretsManager or other Secret Store.
  secretName: "/edp/eks/addons/extensionsOIDC"
  # -- Role ARN for the ExternalSecretOperator to assume.
  roleArn: arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess
  # Defines Secret Store configuration. Used when eso.type is set to "generic".
  generic:
    secretStore:
      # -- Defines SecretStore provider configuration.
      providerConfig: {}
      #  gcpsm:
      #    projectID: "alphabet-123"
